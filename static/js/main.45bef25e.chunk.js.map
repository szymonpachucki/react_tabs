{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","updatedSelectedTabId","some","tab","id","selectedTab","find","className","map","href","onClick","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMASaA,EAA4B,SAAC,GAEpC,IADFC,EACC,EADDA,KAAMC,EACL,EADKA,cAAeC,EACpB,EADoBA,cAEjBC,EAAwBH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAEtDA,EADAD,EAAK,GAAGM,GAGNC,EAAcP,EAAKQ,MACvB,SAAAH,GAAG,OAAIA,EAAIC,KAAOH,MACfH,EAAK,GAEV,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKS,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAACL,GAAD,OACR,oBAEEI,UAAWJ,EAAIC,KAAOC,EAAYD,GAC9B,YAAc,GAClB,UAAQ,MAJV,SAME,mBACEK,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,WACHP,EAAIC,KAAOC,EAAYD,IACzBJ,EAAcG,IALpB,SASGA,EAAIQ,SAdFR,EAAIC,WAoBjB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGF,EAAYO,cCxCRd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAAS,SAAnD,mBAAOf,EAAP,KAAsBgB,EAAtB,KAMMV,EAAW,UAAGP,EAAKQ,MAAK,SAAAH,GAAG,OAAIA,EAAIC,KAAOL,YAA/B,aAAG,EAA4CY,MAEhE,OACE,sBAAKJ,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAF,KAEH,cAAC,EAAD,CACEP,KAAMA,EACNC,cAAeA,EACfC,cAhBoB,SAACG,GACzBY,EAAiBZ,EAAIC,WCdzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.45bef25e.chunk.js","sourcesContent":["import React from 'react';\nimport { Tab } from '../../Types';\n\ntype TabsProps = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<TabsProps> = (\n  { tabs, selectedTabId, onTabSelected },\n) => {\n  const updatedSelectedTabId = !tabs.some(tab => tab.id === selectedTabId)\n    ? tabs[0].id\n    : selectedTabId;\n\n  const selectedTab = tabs.find(\n    tab => tab.id === updatedSelectedTabId,\n  ) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={tab.id === selectedTab.id\n                ? 'is-active' : ''}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== selectedTab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './Types';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const handleTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId)?.title;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTab}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}